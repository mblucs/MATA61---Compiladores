Terminals unused in grammar

    WHILE


Grammar

    0 $accept: program $end

    1 program: statement_list

    2 statement_list: statement
    3               | statement_list statement

    4 statement: declaration
    5          | declaration ';'
    6          | attribution ';'
    7          | if_statement
    8          | loop_statement
    9          | return_statement
   10          | function

   11 declaration: type id_list ';'
   12            | type function
   13            | type attribution

   14 type: TYPE

   15 id_list: identifier
   16        | id_list ',' identifier

   17 identifier: ID
   18           | ID '[' NUM ']'

   19 function: ID '(' parameter_list_opt ')' '{' statement_list '}'
   20         | ID '(' parameter_list_opt ')' ';'

   21 parameter_list_opt: parameter_list
   22                   | ε

   23 parameter_list: parameter
   24               | parameter_list ',' parameter

   25 parameter: type ID
   26          | expression

   27 attribution: identifier '=' expression
   28            | identifier ASSIGN_OP expression
   29            | identifier INC_DEC_OP

   30 if_statement: IF '(' comparison ')' '{' statement_list '}' else_if_opt

   31 else_if_opt: ELSE '{' statement_list '}'
   32            | ELSE if_statement
   33            | ε

   34 comparison: expression RELATIONAL_OP expression
   35           | comparison LOGICAL_OP comparison
   36           | identifier
   37           | function

   38 loop_statement: WHILE_LOOP '(' comparison ')' '{' statement_list '}'
   39               | DO_LOOP '{' statement_list '}' WHILE_LOOP '(' comparison ')' ';'
   40               | FOR_LOOP '(' for_loop_initialization ';' comparison ';' for_loop_initialization ')' '{' statement_list '}'

   41 for_loop_initialization: declaration
   42                        | attribution

   43 return_statement: RETURN expression ';'
   44                 | RETURN ';'

   45 expression: NUM
   46           | STRING_LITERAL
   47           | identifier
   48           | expression '+' expression
   49           | expression '-' expression
   50           | expression '*' expression
   51           | expression '/' expression
   52           | expression BITWISE_OP expression
   53           | identifier INC_DEC_OP
   54           | PREPROCESSOR_OP expression
   55           | UNARY_OP expression
   56           | expression TERNARY_OP expression ':' expression
   57           | '(' expression ')'
   58           | '{' expression_list '}'
   59           | function

   60 expression_list: expression
   61                | expression_list ',' expression


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 19 20 30 38 39 40 57
    ')' (41) 19 20 30 38 39 40 57
    '*' (42) 50
    '+' (43) 48
    ',' (44) 16 24 61
    '-' (45) 49
    '/' (47) 51
    ':' (58) 56
    ';' (59) 5 6 11 20 39 40 43 44
    '=' (61) 27
    '[' (91) 18
    ']' (93) 18
    '{' (123) 19 30 31 38 39 40 58
    '}' (125) 19 30 31 38 39 40 58
    error (256)
    ID <str> (258) 17 18 19 20 25
    NUM <str> (259) 18 45
    RELATIONAL_OP <str> (260) 34
    TYPE <str> (261) 14
    STRING_LITERAL <str> (262) 46
    IF (263) 30
    ELSE (264) 31 32
    WHILE (265)
    RETURN (266) 43 44
    LOGICAL_OP <str> (267) 35
    BITWISE_OP <str> (268) 52
    ASSIGN_OP <str> (269) 28
    INC_DEC_OP <str> (270) 29 53
    PREPROCESSOR_OP <str> (271) 54
    UNARY_OP <str> (272) 55
    TERNARY_OP <str> (273) 56
    DO_LOOP (274) 39
    WHILE_LOOP (275) 38 39
    FOR_LOOP (276) 40


Nonterminals, with rules where they appear

    $accept (36)
        on left: 0
    program <node> (37)
        on left: 1
        on right: 0
    statement_list <node> (38)
        on left: 2 3
        on right: 1 3 19 30 31 38 39 40
    statement <node> (39)
        on left: 4 5 6 7 8 9 10
        on right: 2 3
    declaration <node> (40)
        on left: 11 12 13
        on right: 4 5 41
    type <node> (41)
        on left: 14
        on right: 11 12 13 25
    id_list <node> (42)
        on left: 15 16
        on right: 11 16
    identifier <node> (43)
        on left: 17 18
        on right: 15 16 27 28 29 36 47 53
    function <node> (44)
        on left: 19 20
        on right: 10 12 37 59
    parameter_list_opt <node> (45)
        on left: 21 22
        on right: 19 20
    parameter_list <node> (46)
        on left: 23 24
        on right: 21 24
    parameter <node> (47)
        on left: 25 26
        on right: 23 24
    attribution <node> (48)
        on left: 27 28 29
        on right: 6 13 42
    if_statement <node> (49)
        on left: 30
        on right: 7 32
    else_if_opt <node> (50)
        on left: 31 32 33
        on right: 30
    comparison <node> (51)
        on left: 34 35 36 37
        on right: 30 35 38 39 40
    loop_statement <node> (52)
        on left: 38 39 40
        on right: 8
    for_loop_initialization <node> (53)
        on left: 41 42
        on right: 40
    return_statement <node> (54)
        on left: 43 44
        on right: 9
    expression <node> (55)
        on left: 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59
        on right: 26 27 28 34 43 48 49 50 51 52 54 55 56 57 60 61
    expression_list <node> (56)
        on left: 60 61
        on right: 58 61


State 0

    0 $accept: • program $end

    ID          shift, and go to state 1
    TYPE        shift, and go to state 2
    IF          shift, and go to state 3
    RETURN      shift, and go to state 4
    DO_LOOP     shift, and go to state 5
    WHILE_LOOP  shift, and go to state 6
    FOR_LOOP    shift, and go to state 7

    program           go to state 8
    statement_list    go to state 9
    statement         go to state 10
    declaration       go to state 11
    type              go to state 12
    identifier        go to state 13
    function          go to state 14
    attribution       go to state 15
    if_statement      go to state 16
    loop_statement    go to state 17
    return_statement  go to state 18


State 1

   17 identifier: ID •
   18           | ID • '[' NUM ']'
   19 function: ID • '(' parameter_list_opt ')' '{' statement_list '}'
   20         | ID • '(' parameter_list_opt ')' ';'

    '['  shift, and go to state 19
    '('  shift, and go to state 20

    $default  reduce using rule 17 (identifier)


State 2

   14 type: TYPE •

    $default  reduce using rule 14 (type)


State 3

   30 if_statement: IF • '(' comparison ')' '{' statement_list '}' else_if_opt

    '('  shift, and go to state 21


State 4

   43 return_statement: RETURN • expression ';'
   44                 | RETURN • ';'

    ID               shift, and go to state 1
    NUM              shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    PREPROCESSOR_OP  shift, and go to state 24
    UNARY_OP         shift, and go to state 25
    ';'              shift, and go to state 26
    '('              shift, and go to state 27
    '{'              shift, and go to state 28

    identifier  go to state 29
    function    go to state 30
    expression  go to state 31


State 5

   39 loop_statement: DO_LOOP • '{' statement_list '}' WHILE_LOOP '(' comparison ')' ';'

    '{'  shift, and go to state 32


State 6

   38 loop_statement: WHILE_LOOP • '(' comparison ')' '{' statement_list '}'

    '('  shift, and go to state 33


State 7

   40 loop_statement: FOR_LOOP • '(' for_loop_initialization ';' comparison ';' for_loop_initialization ')' '{' statement_list '}'

    '('  shift, and go to state 34


State 8

    0 $accept: program • $end

    $end  shift, and go to state 35


State 9

    1 program: statement_list •
    3 statement_list: statement_list • statement

    ID          shift, and go to state 1
    TYPE        shift, and go to state 2
    IF          shift, and go to state 3
    RETURN      shift, and go to state 4
    DO_LOOP     shift, and go to state 5
    WHILE_LOOP  shift, and go to state 6
    FOR_LOOP    shift, and go to state 7

    $default  reduce using rule 1 (program)

    statement         go to state 36
    declaration       go to state 11
    type              go to state 12
    identifier        go to state 13
    function          go to state 14
    attribution       go to state 15
    if_statement      go to state 16
    loop_statement    go to state 17
    return_statement  go to state 18


State 10

    2 statement_list: statement •

    $default  reduce using rule 2 (statement_list)


State 11

    4 statement: declaration •
    5          | declaration • ';'

    ';'  shift, and go to state 37

    $default  reduce using rule 4 (statement)


State 12

   11 declaration: type • id_list ';'
   12            | type • function
   13            | type • attribution

    ID  shift, and go to state 1

    id_list      go to state 38
    identifier   go to state 39
    function     go to state 40
    attribution  go to state 41


State 13

   27 attribution: identifier • '=' expression
   28            | identifier • ASSIGN_OP expression
   29            | identifier • INC_DEC_OP

    ASSIGN_OP   shift, and go to state 42
    INC_DEC_OP  shift, and go to state 43
    '='         shift, and go to state 44


State 14

   10 statement: function •

    $default  reduce using rule 10 (statement)


State 15

    6 statement: attribution • ';'

    ';'  shift, and go to state 45


State 16

    7 statement: if_statement •

    $default  reduce using rule 7 (statement)


State 17

    8 statement: loop_statement •

    $default  reduce using rule 8 (statement)


State 18

    9 statement: return_statement •

    $default  reduce using rule 9 (statement)


State 19

   18 identifier: ID '[' • NUM ']'

    NUM  shift, and go to state 46


State 20

   19 function: ID '(' • parameter_list_opt ')' '{' statement_list '}'
   20         | ID '(' • parameter_list_opt ')' ';'

    ID               shift, and go to state 1
    NUM              shift, and go to state 22
    TYPE             shift, and go to state 2
    STRING_LITERAL   shift, and go to state 23
    PREPROCESSOR_OP  shift, and go to state 24
    UNARY_OP         shift, and go to state 25
    '('              shift, and go to state 27
    '{'              shift, and go to state 28

    $default  reduce using rule 22 (parameter_list_opt)

    type                go to state 47
    identifier          go to state 29
    function            go to state 30
    parameter_list_opt  go to state 48
    parameter_list      go to state 49
    parameter           go to state 50
    expression          go to state 51


State 21

   30 if_statement: IF '(' • comparison ')' '{' statement_list '}' else_if_opt

    ID               shift, and go to state 1
    NUM              shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    PREPROCESSOR_OP  shift, and go to state 24
    UNARY_OP         shift, and go to state 25
    '('              shift, and go to state 27
    '{'              shift, and go to state 28

    identifier  go to state 52
    function    go to state 53
    comparison  go to state 54
    expression  go to state 55


State 22

   45 expression: NUM •

    $default  reduce using rule 45 (expression)


State 23

   46 expression: STRING_LITERAL •

    $default  reduce using rule 46 (expression)


State 24

   54 expression: PREPROCESSOR_OP • expression

    ID               shift, and go to state 1
    NUM              shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    PREPROCESSOR_OP  shift, and go to state 24
    UNARY_OP         shift, and go to state 25
    '('              shift, and go to state 27
    '{'              shift, and go to state 28

    identifier  go to state 29
    function    go to state 30
    expression  go to state 56


State 25

   55 expression: UNARY_OP • expression

    ID               shift, and go to state 1
    NUM              shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    PREPROCESSOR_OP  shift, and go to state 24
    UNARY_OP         shift, and go to state 25
    '('              shift, and go to state 27
    '{'              shift, and go to state 28

    identifier  go to state 29
    function    go to state 30
    expression  go to state 57


State 26

   44 return_statement: RETURN ';' •

    $default  reduce using rule 44 (return_statement)


State 27

   57 expression: '(' • expression ')'

    ID               shift, and go to state 1
    NUM              shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    PREPROCESSOR_OP  shift, and go to state 24
    UNARY_OP         shift, and go to state 25
    '('              shift, and go to state 27
    '{'              shift, and go to state 28

    identifier  go to state 29
    function    go to state 30
    expression  go to state 58


State 28

   58 expression: '{' • expression_list '}'

    ID               shift, and go to state 1
    NUM              shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    PREPROCESSOR_OP  shift, and go to state 24
    UNARY_OP         shift, and go to state 25
    '('              shift, and go to state 27
    '{'              shift, and go to state 28

    identifier       go to state 29
    function         go to state 30
    expression       go to state 59
    expression_list  go to state 60


State 29

   47 expression: identifier •
   53           | identifier • INC_DEC_OP

    INC_DEC_OP  shift, and go to state 61

    $default  reduce using rule 47 (expression)


State 30

   59 expression: function •

    $default  reduce using rule 59 (expression)


State 31

   43 return_statement: RETURN expression • ';'
   48 expression: expression • '+' expression
   49           | expression • '-' expression
   50           | expression • '*' expression
   51           | expression • '/' expression
   52           | expression • BITWISE_OP expression
   56           | expression • TERNARY_OP expression ':' expression

    BITWISE_OP  shift, and go to state 62
    TERNARY_OP  shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '/'         shift, and go to state 67
    ';'         shift, and go to state 68


State 32

   39 loop_statement: DO_LOOP '{' • statement_list '}' WHILE_LOOP '(' comparison ')' ';'

    ID          shift, and go to state 1
    TYPE        shift, and go to state 2
    IF          shift, and go to state 3
    RETURN      shift, and go to state 4
    DO_LOOP     shift, and go to state 5
    WHILE_LOOP  shift, and go to state 6
    FOR_LOOP    shift, and go to state 7

    statement_list    go to state 69
    statement         go to state 10
    declaration       go to state 11
    type              go to state 12
    identifier        go to state 13
    function          go to state 14
    attribution       go to state 15
    if_statement      go to state 16
    loop_statement    go to state 17
    return_statement  go to state 18


State 33

   38 loop_statement: WHILE_LOOP '(' • comparison ')' '{' statement_list '}'

    ID               shift, and go to state 1
    NUM              shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    PREPROCESSOR_OP  shift, and go to state 24
    UNARY_OP         shift, and go to state 25
    '('              shift, and go to state 27
    '{'              shift, and go to state 28

    identifier  go to state 52
    function    go to state 53
    comparison  go to state 70
    expression  go to state 55


State 34

   40 loop_statement: FOR_LOOP '(' • for_loop_initialization ';' comparison ';' for_loop_initialization ')' '{' statement_list '}'

    ID    shift, and go to state 71
    TYPE  shift, and go to state 2

    declaration              go to state 72
    type                     go to state 12
    identifier               go to state 13
    attribution              go to state 73
    for_loop_initialization  go to state 74


State 35

    0 $accept: program $end •

    $default  accept


State 36

    3 statement_list: statement_list statement •

    $default  reduce using rule 3 (statement_list)


State 37

    5 statement: declaration ';' •

    $default  reduce using rule 5 (statement)


State 38

   11 declaration: type id_list • ';'
   16 id_list: id_list • ',' identifier

    ';'  shift, and go to state 75
    ','  shift, and go to state 76


State 39

   15 id_list: identifier •
   27 attribution: identifier • '=' expression
   28            | identifier • ASSIGN_OP expression
   29            | identifier • INC_DEC_OP

    ASSIGN_OP   shift, and go to state 42
    INC_DEC_OP  shift, and go to state 43
    '='         shift, and go to state 44

    $default  reduce using rule 15 (id_list)


State 40

   12 declaration: type function •

    $default  reduce using rule 12 (declaration)


State 41

   13 declaration: type attribution •

    $default  reduce using rule 13 (declaration)


State 42

   28 attribution: identifier ASSIGN_OP • expression

    ID               shift, and go to state 1
    NUM              shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    PREPROCESSOR_OP  shift, and go to state 24
    UNARY_OP         shift, and go to state 25
    '('              shift, and go to state 27
    '{'              shift, and go to state 28

    identifier  go to state 29
    function    go to state 30
    expression  go to state 77


State 43

   29 attribution: identifier INC_DEC_OP •

    $default  reduce using rule 29 (attribution)


State 44

   27 attribution: identifier '=' • expression

    ID               shift, and go to state 1
    NUM              shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    PREPROCESSOR_OP  shift, and go to state 24
    UNARY_OP         shift, and go to state 25
    '('              shift, and go to state 27
    '{'              shift, and go to state 28

    identifier  go to state 29
    function    go to state 30
    expression  go to state 78


State 45

    6 statement: attribution ';' •

    $default  reduce using rule 6 (statement)


State 46

   18 identifier: ID '[' NUM • ']'

    ']'  shift, and go to state 79


State 47

   25 parameter: type • ID

    ID  shift, and go to state 80


State 48

   19 function: ID '(' parameter_list_opt • ')' '{' statement_list '}'
   20         | ID '(' parameter_list_opt • ')' ';'

    ')'  shift, and go to state 81


State 49

   21 parameter_list_opt: parameter_list •
   24 parameter_list: parameter_list • ',' parameter

    ','  shift, and go to state 82

    $default  reduce using rule 21 (parameter_list_opt)


State 50

   23 parameter_list: parameter •

    $default  reduce using rule 23 (parameter_list)


State 51

   26 parameter: expression •
   48 expression: expression • '+' expression
   49           | expression • '-' expression
   50           | expression • '*' expression
   51           | expression • '/' expression
   52           | expression • BITWISE_OP expression
   56           | expression • TERNARY_OP expression ':' expression

    BITWISE_OP  shift, and go to state 62
    TERNARY_OP  shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '/'         shift, and go to state 67

    $default  reduce using rule 26 (parameter)


State 52

   36 comparison: identifier •
   47 expression: identifier •
   53           | identifier • INC_DEC_OP

    INC_DEC_OP  shift, and go to state 61

    LOGICAL_OP  reduce using rule 36 (comparison)
    ';'         reduce using rule 36 (comparison)
    ')'         reduce using rule 36 (comparison)
    $default    reduce using rule 47 (expression)


State 53

   37 comparison: function •
   59 expression: function •

    LOGICAL_OP  reduce using rule 37 (comparison)
    ';'         reduce using rule 37 (comparison)
    ')'         reduce using rule 37 (comparison)
    $default    reduce using rule 59 (expression)


State 54

   30 if_statement: IF '(' comparison • ')' '{' statement_list '}' else_if_opt
   35 comparison: comparison • LOGICAL_OP comparison

    LOGICAL_OP  shift, and go to state 83
    ')'         shift, and go to state 84


State 55

   34 comparison: expression • RELATIONAL_OP expression
   48 expression: expression • '+' expression
   49           | expression • '-' expression
   50           | expression • '*' expression
   51           | expression • '/' expression
   52           | expression • BITWISE_OP expression
   56           | expression • TERNARY_OP expression ':' expression

    RELATIONAL_OP  shift, and go to state 85
    BITWISE_OP     shift, and go to state 62
    TERNARY_OP     shift, and go to state 63
    '+'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '/'            shift, and go to state 67


State 56

   48 expression: expression • '+' expression
   49           | expression • '-' expression
   50           | expression • '*' expression
   51           | expression • '/' expression
   52           | expression • BITWISE_OP expression
   54           | PREPROCESSOR_OP expression •
   56           | expression • TERNARY_OP expression ':' expression

    TERNARY_OP  shift, and go to state 63

    $default  reduce using rule 54 (expression)


State 57

   48 expression: expression • '+' expression
   49           | expression • '-' expression
   50           | expression • '*' expression
   51           | expression • '/' expression
   52           | expression • BITWISE_OP expression
   55           | UNARY_OP expression •
   56           | expression • TERNARY_OP expression ':' expression

    TERNARY_OP  shift, and go to state 63

    $default  reduce using rule 55 (expression)


State 58

   48 expression: expression • '+' expression
   49           | expression • '-' expression
   50           | expression • '*' expression
   51           | expression • '/' expression
   52           | expression • BITWISE_OP expression
   56           | expression • TERNARY_OP expression ':' expression
   57           | '(' expression • ')'

    BITWISE_OP  shift, and go to state 62
    TERNARY_OP  shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '/'         shift, and go to state 67
    ')'         shift, and go to state 86


State 59

   48 expression: expression • '+' expression
   49           | expression • '-' expression
   50           | expression • '*' expression
   51           | expression • '/' expression
   52           | expression • BITWISE_OP expression
   56           | expression • TERNARY_OP expression ':' expression
   60 expression_list: expression •

    BITWISE_OP  shift, and go to state 62
    TERNARY_OP  shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '/'         shift, and go to state 67

    $default  reduce using rule 60 (expression_list)


State 60

   58 expression: '{' expression_list • '}'
   61 expression_list: expression_list • ',' expression

    ','  shift, and go to state 87
    '}'  shift, and go to state 88


State 61

   53 expression: identifier INC_DEC_OP •

    $default  reduce using rule 53 (expression)


State 62

   52 expression: expression BITWISE_OP • expression

    ID               shift, and go to state 1
    NUM              shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    PREPROCESSOR_OP  shift, and go to state 24
    UNARY_OP         shift, and go to state 25
    '('              shift, and go to state 27
    '{'              shift, and go to state 28

    identifier  go to state 29
    function    go to state 30
    expression  go to state 89


State 63

   56 expression: expression TERNARY_OP • expression ':' expression

    ID               shift, and go to state 1
    NUM              shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    PREPROCESSOR_OP  shift, and go to state 24
    UNARY_OP         shift, and go to state 25
    '('              shift, and go to state 27
    '{'              shift, and go to state 28

    identifier  go to state 29
    function    go to state 30
    expression  go to state 90


State 64

   48 expression: expression '+' • expression

    ID               shift, and go to state 1
    NUM              shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    PREPROCESSOR_OP  shift, and go to state 24
    UNARY_OP         shift, and go to state 25
    '('              shift, and go to state 27
    '{'              shift, and go to state 28

    identifier  go to state 29
    function    go to state 30
    expression  go to state 91


State 65

   49 expression: expression '-' • expression

    ID               shift, and go to state 1
    NUM              shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    PREPROCESSOR_OP  shift, and go to state 24
    UNARY_OP         shift, and go to state 25
    '('              shift, and go to state 27
    '{'              shift, and go to state 28

    identifier  go to state 29
    function    go to state 30
    expression  go to state 92


State 66

   50 expression: expression '*' • expression

    ID               shift, and go to state 1
    NUM              shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    PREPROCESSOR_OP  shift, and go to state 24
    UNARY_OP         shift, and go to state 25
    '('              shift, and go to state 27
    '{'              shift, and go to state 28

    identifier  go to state 29
    function    go to state 30
    expression  go to state 93


State 67

   51 expression: expression '/' • expression

    ID               shift, and go to state 1
    NUM              shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    PREPROCESSOR_OP  shift, and go to state 24
    UNARY_OP         shift, and go to state 25
    '('              shift, and go to state 27
    '{'              shift, and go to state 28

    identifier  go to state 29
    function    go to state 30
    expression  go to state 94


State 68

   43 return_statement: RETURN expression ';' •

    $default  reduce using rule 43 (return_statement)


State 69

    3 statement_list: statement_list • statement
   39 loop_statement: DO_LOOP '{' statement_list • '}' WHILE_LOOP '(' comparison ')' ';'

    ID          shift, and go to state 1
    TYPE        shift, and go to state 2
    IF          shift, and go to state 3
    RETURN      shift, and go to state 4
    DO_LOOP     shift, and go to state 5
    WHILE_LOOP  shift, and go to state 6
    FOR_LOOP    shift, and go to state 7
    '}'         shift, and go to state 95

    statement         go to state 36
    declaration       go to state 11
    type              go to state 12
    identifier        go to state 13
    function          go to state 14
    attribution       go to state 15
    if_statement      go to state 16
    loop_statement    go to state 17
    return_statement  go to state 18


State 70

   35 comparison: comparison • LOGICAL_OP comparison
   38 loop_statement: WHILE_LOOP '(' comparison • ')' '{' statement_list '}'

    LOGICAL_OP  shift, and go to state 83
    ')'         shift, and go to state 96


State 71

   17 identifier: ID •
   18           | ID • '[' NUM ']'

    '['  shift, and go to state 19

    $default  reduce using rule 17 (identifier)


State 72

   41 for_loop_initialization: declaration •

    $default  reduce using rule 41 (for_loop_initialization)


State 73

   42 for_loop_initialization: attribution •

    $default  reduce using rule 42 (for_loop_initialization)


State 74

   40 loop_statement: FOR_LOOP '(' for_loop_initialization • ';' comparison ';' for_loop_initialization ')' '{' statement_list '}'

    ';'  shift, and go to state 97


State 75

   11 declaration: type id_list ';' •

    $default  reduce using rule 11 (declaration)


State 76

   16 id_list: id_list ',' • identifier

    ID  shift, and go to state 71

    identifier  go to state 98


State 77

   28 attribution: identifier ASSIGN_OP expression •
   48 expression: expression • '+' expression
   49           | expression • '-' expression
   50           | expression • '*' expression
   51           | expression • '/' expression
   52           | expression • BITWISE_OP expression
   56           | expression • TERNARY_OP expression ':' expression

    BITWISE_OP  shift, and go to state 62
    TERNARY_OP  shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '/'         shift, and go to state 67

    $default  reduce using rule 28 (attribution)


State 78

   27 attribution: identifier '=' expression •
   48 expression: expression • '+' expression
   49           | expression • '-' expression
   50           | expression • '*' expression
   51           | expression • '/' expression
   52           | expression • BITWISE_OP expression
   56           | expression • TERNARY_OP expression ':' expression

    BITWISE_OP  shift, and go to state 62
    TERNARY_OP  shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '/'         shift, and go to state 67

    $default  reduce using rule 27 (attribution)


State 79

   18 identifier: ID '[' NUM ']' •

    $default  reduce using rule 18 (identifier)


State 80

   25 parameter: type ID •

    $default  reduce using rule 25 (parameter)


State 81

   19 function: ID '(' parameter_list_opt ')' • '{' statement_list '}'
   20         | ID '(' parameter_list_opt ')' • ';'

    ';'  shift, and go to state 99
    '{'  shift, and go to state 100


State 82

   24 parameter_list: parameter_list ',' • parameter

    ID               shift, and go to state 1
    NUM              shift, and go to state 22
    TYPE             shift, and go to state 2
    STRING_LITERAL   shift, and go to state 23
    PREPROCESSOR_OP  shift, and go to state 24
    UNARY_OP         shift, and go to state 25
    '('              shift, and go to state 27
    '{'              shift, and go to state 28

    type        go to state 47
    identifier  go to state 29
    function    go to state 30
    parameter   go to state 101
    expression  go to state 51


State 83

   35 comparison: comparison LOGICAL_OP • comparison

    ID               shift, and go to state 1
    NUM              shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    PREPROCESSOR_OP  shift, and go to state 24
    UNARY_OP         shift, and go to state 25
    '('              shift, and go to state 27
    '{'              shift, and go to state 28

    identifier  go to state 52
    function    go to state 53
    comparison  go to state 102
    expression  go to state 55


State 84

   30 if_statement: IF '(' comparison ')' • '{' statement_list '}' else_if_opt

    '{'  shift, and go to state 103


State 85

   34 comparison: expression RELATIONAL_OP • expression

    ID               shift, and go to state 1
    NUM              shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    PREPROCESSOR_OP  shift, and go to state 24
    UNARY_OP         shift, and go to state 25
    '('              shift, and go to state 27
    '{'              shift, and go to state 28

    identifier  go to state 29
    function    go to state 30
    expression  go to state 104


State 86

   57 expression: '(' expression ')' •

    $default  reduce using rule 57 (expression)


State 87

   61 expression_list: expression_list ',' • expression

    ID               shift, and go to state 1
    NUM              shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    PREPROCESSOR_OP  shift, and go to state 24
    UNARY_OP         shift, and go to state 25
    '('              shift, and go to state 27
    '{'              shift, and go to state 28

    identifier  go to state 29
    function    go to state 30
    expression  go to state 105


State 88

   58 expression: '{' expression_list '}' •

    $default  reduce using rule 58 (expression)


State 89

   48 expression: expression • '+' expression
   49           | expression • '-' expression
   50           | expression • '*' expression
   51           | expression • '/' expression
   52           | expression • BITWISE_OP expression
   52           | expression BITWISE_OP expression •
   56           | expression • TERNARY_OP expression ':' expression

    TERNARY_OP  shift, and go to state 63

    BITWISE_OP  error (nonassociative)

    $default  reduce using rule 52 (expression)


State 90

   48 expression: expression • '+' expression
   49           | expression • '-' expression
   50           | expression • '*' expression
   51           | expression • '/' expression
   52           | expression • BITWISE_OP expression
   56           | expression • TERNARY_OP expression ':' expression
   56           | expression TERNARY_OP expression • ':' expression

    BITWISE_OP  shift, and go to state 62
    TERNARY_OP  shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '/'         shift, and go to state 67
    ':'         shift, and go to state 106


State 91

   48 expression: expression • '+' expression
   48           | expression '+' expression •
   49           | expression • '-' expression
   50           | expression • '*' expression
   51           | expression • '/' expression
   52           | expression • BITWISE_OP expression
   56           | expression • TERNARY_OP expression ':' expression

    BITWISE_OP  shift, and go to state 62
    TERNARY_OP  shift, and go to state 63
    '*'         shift, and go to state 66
    '/'         shift, and go to state 67

    $default  reduce using rule 48 (expression)


State 92

   48 expression: expression • '+' expression
   49           | expression • '-' expression
   49           | expression '-' expression •
   50           | expression • '*' expression
   51           | expression • '/' expression
   52           | expression • BITWISE_OP expression
   56           | expression • TERNARY_OP expression ':' expression

    BITWISE_OP  shift, and go to state 62
    TERNARY_OP  shift, and go to state 63
    '*'         shift, and go to state 66
    '/'         shift, and go to state 67

    $default  reduce using rule 49 (expression)


State 93

   48 expression: expression • '+' expression
   49           | expression • '-' expression
   50           | expression • '*' expression
   50           | expression '*' expression •
   51           | expression • '/' expression
   52           | expression • BITWISE_OP expression
   56           | expression • TERNARY_OP expression ':' expression

    BITWISE_OP  shift, and go to state 62
    TERNARY_OP  shift, and go to state 63

    $default  reduce using rule 50 (expression)


State 94

   48 expression: expression • '+' expression
   49           | expression • '-' expression
   50           | expression • '*' expression
   51           | expression • '/' expression
   51           | expression '/' expression •
   52           | expression • BITWISE_OP expression
   56           | expression • TERNARY_OP expression ':' expression

    BITWISE_OP  shift, and go to state 62
    TERNARY_OP  shift, and go to state 63

    $default  reduce using rule 51 (expression)


State 95

   39 loop_statement: DO_LOOP '{' statement_list '}' • WHILE_LOOP '(' comparison ')' ';'

    WHILE_LOOP  shift, and go to state 107


State 96

   38 loop_statement: WHILE_LOOP '(' comparison ')' • '{' statement_list '}'

    '{'  shift, and go to state 108


State 97

   40 loop_statement: FOR_LOOP '(' for_loop_initialization ';' • comparison ';' for_loop_initialization ')' '{' statement_list '}'

    ID               shift, and go to state 1
    NUM              shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    PREPROCESSOR_OP  shift, and go to state 24
    UNARY_OP         shift, and go to state 25
    '('              shift, and go to state 27
    '{'              shift, and go to state 28

    identifier  go to state 52
    function    go to state 53
    comparison  go to state 109
    expression  go to state 55


State 98

   16 id_list: id_list ',' identifier •

    $default  reduce using rule 16 (id_list)


State 99

   20 function: ID '(' parameter_list_opt ')' ';' •

    $default  reduce using rule 20 (function)


State 100

   19 function: ID '(' parameter_list_opt ')' '{' • statement_list '}'

    ID          shift, and go to state 1
    TYPE        shift, and go to state 2
    IF          shift, and go to state 3
    RETURN      shift, and go to state 4
    DO_LOOP     shift, and go to state 5
    WHILE_LOOP  shift, and go to state 6
    FOR_LOOP    shift, and go to state 7

    statement_list    go to state 110
    statement         go to state 10
    declaration       go to state 11
    type              go to state 12
    identifier        go to state 13
    function          go to state 14
    attribution       go to state 15
    if_statement      go to state 16
    loop_statement    go to state 17
    return_statement  go to state 18


State 101

   24 parameter_list: parameter_list ',' parameter •

    $default  reduce using rule 24 (parameter_list)


State 102

   35 comparison: comparison • LOGICAL_OP comparison
   35           | comparison LOGICAL_OP comparison •

    LOGICAL_OP  error (nonassociative)

    $default  reduce using rule 35 (comparison)


State 103

   30 if_statement: IF '(' comparison ')' '{' • statement_list '}' else_if_opt

    ID          shift, and go to state 1
    TYPE        shift, and go to state 2
    IF          shift, and go to state 3
    RETURN      shift, and go to state 4
    DO_LOOP     shift, and go to state 5
    WHILE_LOOP  shift, and go to state 6
    FOR_LOOP    shift, and go to state 7

    statement_list    go to state 111
    statement         go to state 10
    declaration       go to state 11
    type              go to state 12
    identifier        go to state 13
    function          go to state 14
    attribution       go to state 15
    if_statement      go to state 16
    loop_statement    go to state 17
    return_statement  go to state 18


State 104

   34 comparison: expression RELATIONAL_OP expression •
   48 expression: expression • '+' expression
   49           | expression • '-' expression
   50           | expression • '*' expression
   51           | expression • '/' expression
   52           | expression • BITWISE_OP expression
   56           | expression • TERNARY_OP expression ':' expression

    BITWISE_OP  shift, and go to state 62
    TERNARY_OP  shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '/'         shift, and go to state 67

    $default  reduce using rule 34 (comparison)


State 105

   48 expression: expression • '+' expression
   49           | expression • '-' expression
   50           | expression • '*' expression
   51           | expression • '/' expression
   52           | expression • BITWISE_OP expression
   56           | expression • TERNARY_OP expression ':' expression
   61 expression_list: expression_list ',' expression •

    BITWISE_OP  shift, and go to state 62
    TERNARY_OP  shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '/'         shift, and go to state 67

    $default  reduce using rule 61 (expression_list)


State 106

   56 expression: expression TERNARY_OP expression ':' • expression

    ID               shift, and go to state 1
    NUM              shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    PREPROCESSOR_OP  shift, and go to state 24
    UNARY_OP         shift, and go to state 25
    '('              shift, and go to state 27
    '{'              shift, and go to state 28

    identifier  go to state 29
    function    go to state 30
    expression  go to state 112


State 107

   39 loop_statement: DO_LOOP '{' statement_list '}' WHILE_LOOP • '(' comparison ')' ';'

    '('  shift, and go to state 113


State 108

   38 loop_statement: WHILE_LOOP '(' comparison ')' '{' • statement_list '}'

    ID          shift, and go to state 1
    TYPE        shift, and go to state 2
    IF          shift, and go to state 3
    RETURN      shift, and go to state 4
    DO_LOOP     shift, and go to state 5
    WHILE_LOOP  shift, and go to state 6
    FOR_LOOP    shift, and go to state 7

    statement_list    go to state 114
    statement         go to state 10
    declaration       go to state 11
    type              go to state 12
    identifier        go to state 13
    function          go to state 14
    attribution       go to state 15
    if_statement      go to state 16
    loop_statement    go to state 17
    return_statement  go to state 18


State 109

   35 comparison: comparison • LOGICAL_OP comparison
   40 loop_statement: FOR_LOOP '(' for_loop_initialization ';' comparison • ';' for_loop_initialization ')' '{' statement_list '}'

    LOGICAL_OP  shift, and go to state 83
    ';'         shift, and go to state 115


State 110

    3 statement_list: statement_list • statement
   19 function: ID '(' parameter_list_opt ')' '{' statement_list • '}'

    ID          shift, and go to state 1
    TYPE        shift, and go to state 2
    IF          shift, and go to state 3
    RETURN      shift, and go to state 4
    DO_LOOP     shift, and go to state 5
    WHILE_LOOP  shift, and go to state 6
    FOR_LOOP    shift, and go to state 7
    '}'         shift, and go to state 116

    statement         go to state 36
    declaration       go to state 11
    type              go to state 12
    identifier        go to state 13
    function          go to state 14
    attribution       go to state 15
    if_statement      go to state 16
    loop_statement    go to state 17
    return_statement  go to state 18


State 111

    3 statement_list: statement_list • statement
   30 if_statement: IF '(' comparison ')' '{' statement_list • '}' else_if_opt

    ID          shift, and go to state 1
    TYPE        shift, and go to state 2
    IF          shift, and go to state 3
    RETURN      shift, and go to state 4
    DO_LOOP     shift, and go to state 5
    WHILE_LOOP  shift, and go to state 6
    FOR_LOOP    shift, and go to state 7
    '}'         shift, and go to state 117

    statement         go to state 36
    declaration       go to state 11
    type              go to state 12
    identifier        go to state 13
    function          go to state 14
    attribution       go to state 15
    if_statement      go to state 16
    loop_statement    go to state 17
    return_statement  go to state 18


State 112

   48 expression: expression • '+' expression
   49           | expression • '-' expression
   50           | expression • '*' expression
   51           | expression • '/' expression
   52           | expression • BITWISE_OP expression
   56           | expression • TERNARY_OP expression ':' expression
   56           | expression TERNARY_OP expression ':' expression •

    TERNARY_OP  shift, and go to state 63

    $default  reduce using rule 56 (expression)


State 113

   39 loop_statement: DO_LOOP '{' statement_list '}' WHILE_LOOP '(' • comparison ')' ';'

    ID               shift, and go to state 1
    NUM              shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    PREPROCESSOR_OP  shift, and go to state 24
    UNARY_OP         shift, and go to state 25
    '('              shift, and go to state 27
    '{'              shift, and go to state 28

    identifier  go to state 52
    function    go to state 53
    comparison  go to state 118
    expression  go to state 55


State 114

    3 statement_list: statement_list • statement
   38 loop_statement: WHILE_LOOP '(' comparison ')' '{' statement_list • '}'

    ID          shift, and go to state 1
    TYPE        shift, and go to state 2
    IF          shift, and go to state 3
    RETURN      shift, and go to state 4
    DO_LOOP     shift, and go to state 5
    WHILE_LOOP  shift, and go to state 6
    FOR_LOOP    shift, and go to state 7
    '}'         shift, and go to state 119

    statement         go to state 36
    declaration       go to state 11
    type              go to state 12
    identifier        go to state 13
    function          go to state 14
    attribution       go to state 15
    if_statement      go to state 16
    loop_statement    go to state 17
    return_statement  go to state 18


State 115

   40 loop_statement: FOR_LOOP '(' for_loop_initialization ';' comparison ';' • for_loop_initialization ')' '{' statement_list '}'

    ID    shift, and go to state 71
    TYPE  shift, and go to state 2

    declaration              go to state 72
    type                     go to state 12
    identifier               go to state 13
    attribution              go to state 73
    for_loop_initialization  go to state 120


State 116

   19 function: ID '(' parameter_list_opt ')' '{' statement_list '}' •

    $default  reduce using rule 19 (function)


State 117

   30 if_statement: IF '(' comparison ')' '{' statement_list '}' • else_if_opt

    ELSE  shift, and go to state 121

    $default  reduce using rule 33 (else_if_opt)

    else_if_opt  go to state 122


State 118

   35 comparison: comparison • LOGICAL_OP comparison
   39 loop_statement: DO_LOOP '{' statement_list '}' WHILE_LOOP '(' comparison • ')' ';'

    LOGICAL_OP  shift, and go to state 83
    ')'         shift, and go to state 123


State 119

   38 loop_statement: WHILE_LOOP '(' comparison ')' '{' statement_list '}' •

    $default  reduce using rule 38 (loop_statement)


State 120

   40 loop_statement: FOR_LOOP '(' for_loop_initialization ';' comparison ';' for_loop_initialization • ')' '{' statement_list '}'

    ')'  shift, and go to state 124


State 121

   31 else_if_opt: ELSE • '{' statement_list '}'
   32            | ELSE • if_statement

    IF   shift, and go to state 3
    '{'  shift, and go to state 125

    if_statement  go to state 126


State 122

   30 if_statement: IF '(' comparison ')' '{' statement_list '}' else_if_opt •

    $default  reduce using rule 30 (if_statement)


State 123

   39 loop_statement: DO_LOOP '{' statement_list '}' WHILE_LOOP '(' comparison ')' • ';'

    ';'  shift, and go to state 127


State 124

   40 loop_statement: FOR_LOOP '(' for_loop_initialization ';' comparison ';' for_loop_initialization ')' • '{' statement_list '}'

    '{'  shift, and go to state 128


State 125

   31 else_if_opt: ELSE '{' • statement_list '}'

    ID          shift, and go to state 1
    TYPE        shift, and go to state 2
    IF          shift, and go to state 3
    RETURN      shift, and go to state 4
    DO_LOOP     shift, and go to state 5
    WHILE_LOOP  shift, and go to state 6
    FOR_LOOP    shift, and go to state 7

    statement_list    go to state 129
    statement         go to state 10
    declaration       go to state 11
    type              go to state 12
    identifier        go to state 13
    function          go to state 14
    attribution       go to state 15
    if_statement      go to state 16
    loop_statement    go to state 17
    return_statement  go to state 18


State 126

   32 else_if_opt: ELSE if_statement •

    $default  reduce using rule 32 (else_if_opt)


State 127

   39 loop_statement: DO_LOOP '{' statement_list '}' WHILE_LOOP '(' comparison ')' ';' •

    $default  reduce using rule 39 (loop_statement)


State 128

   40 loop_statement: FOR_LOOP '(' for_loop_initialization ';' comparison ';' for_loop_initialization ')' '{' • statement_list '}'

    ID          shift, and go to state 1
    TYPE        shift, and go to state 2
    IF          shift, and go to state 3
    RETURN      shift, and go to state 4
    DO_LOOP     shift, and go to state 5
    WHILE_LOOP  shift, and go to state 6
    FOR_LOOP    shift, and go to state 7

    statement_list    go to state 130
    statement         go to state 10
    declaration       go to state 11
    type              go to state 12
    identifier        go to state 13
    function          go to state 14
    attribution       go to state 15
    if_statement      go to state 16
    loop_statement    go to state 17
    return_statement  go to state 18


State 129

    3 statement_list: statement_list • statement
   31 else_if_opt: ELSE '{' statement_list • '}'

    ID          shift, and go to state 1
    TYPE        shift, and go to state 2
    IF          shift, and go to state 3
    RETURN      shift, and go to state 4
    DO_LOOP     shift, and go to state 5
    WHILE_LOOP  shift, and go to state 6
    FOR_LOOP    shift, and go to state 7
    '}'         shift, and go to state 131

    statement         go to state 36
    declaration       go to state 11
    type              go to state 12
    identifier        go to state 13
    function          go to state 14
    attribution       go to state 15
    if_statement      go to state 16
    loop_statement    go to state 17
    return_statement  go to state 18


State 130

    3 statement_list: statement_list • statement
   40 loop_statement: FOR_LOOP '(' for_loop_initialization ';' comparison ';' for_loop_initialization ')' '{' statement_list • '}'

    ID          shift, and go to state 1
    TYPE        shift, and go to state 2
    IF          shift, and go to state 3
    RETURN      shift, and go to state 4
    DO_LOOP     shift, and go to state 5
    WHILE_LOOP  shift, and go to state 6
    FOR_LOOP    shift, and go to state 7
    '}'         shift, and go to state 132

    statement         go to state 36
    declaration       go to state 11
    type              go to state 12
    identifier        go to state 13
    function          go to state 14
    attribution       go to state 15
    if_statement      go to state 16
    loop_statement    go to state 17
    return_statement  go to state 18


State 131

   31 else_if_opt: ELSE '{' statement_list '}' •

    $default  reduce using rule 31 (else_if_opt)


State 132

   40 loop_statement: FOR_LOOP '(' for_loop_initialization ';' comparison ';' for_loop_initialization ')' '{' statement_list '}' •

    $default  reduce using rule 40 (loop_statement)

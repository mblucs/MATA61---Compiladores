(8, KEY, int) 
(8, ID, 1) 
(8, PUNCT, "(")
(8, KEY, int) 
(8, ID, 2) 
(8, PUNCT, ",")
(8, KEY, int) 
(8, ID, 3) 
(8, PUNCT, ")")
(8, PUNCT, "{")
(9, KEY, return) 
(9, ID, 2) 
(9, PUNCT, "+")
(9, ID, 3) 
(9, PUNCT, ";")
(10, PUNCT, "}")
(13, KEY, float) 
(13, ID, 4) 
(13, PUNCT, "(")
(13, KEY, float) 
(13, ID, 5) 
(13, PUNCT, ",")
(13, KEY, float) 
(13, ID, 6) 
(13, PUNCT, ")")
(13, PUNCT, "{")
(14, KEY, return) 
(14, PUNCT, "(")
(14, ID, 5) 
(14, PUNCT, "+")
(14, ID, 6) 
(14, PUNCT, ")")
(14, PUNCT, "/")
(14, CONST, 2) 
(14, PUNCT, ";")
(15, PUNCT, "}")
(18, KEY, void) 
(18, ID, 7) 
(18, PUNCT, "(")
(18, PUNCT, ")")
(18, PUNCT, "{")
(19, ID, 8) 
(19, PUNCT, "(")
(19, STR, "Executando a função imprimirMensagem.\n")
(19, PUNCT, ")")
(19, PUNCT, ";")
(20, PUNCT, "}")
(22, KEY, int) 
(22, ID, 9) 
(22, PUNCT, "(")
(22, PUNCT, ")")
(22, PUNCT, "{")
(24, KEY, int) 
(24, ID, 10) 
(24, PUNCT, "=")
(24, CONST, 10) 
(24, PUNCT, ";")
(25, KEY, float) 
(25, ID, 11) 
(25, PUNCT, "=")
(25, CONST, 20.5) 
(25, PUNCT, ";")
(28, KEY, int) 
(28, ID, 12) 
(28, PUNCT, "[")
(28, CONST, 5) 
(28, PUNCT, "]")
(28, PUNCT, "=")
(28, PUNCT, "{")
(28, CONST, 1) 
(28, PUNCT, ",")
(28, CONST, 2) 
(28, PUNCT, ",")
(28, CONST, 3) 
(28, PUNCT, ",")
(28, CONST, 4) 
(28, PUNCT, ",")
(28, CONST, 5) 
(28, PUNCT, "}")
(28, PUNCT, ";")
(29, KEY, float) 
(29, ID, 13) 
(29, PUNCT, "[")
(29, CONST, 4) 
(29, PUNCT, "]")
(29, PUNCT, "=")
(29, PUNCT, "{")
(29, CONST, 1.1) 
(29, PUNCT, ",")
(29, CONST, 2.2) 
(29, PUNCT, ",")
(29, CONST, 3.3) 
(29, PUNCT, ",")
(29, CONST, 4.4) 
(29, PUNCT, "}")
(29, PUNCT, ";")
(32, ID, 10) 
(32, PUNCT, "=")
(32, CONST, 5) 
(32, PUNCT, ";")
(33, ID, 12) 
(33, PUNCT, "[")
(33, CONST, 1) 
(33, PUNCT, "]")
(33, PUNCT, "=")
(33, ID, 10) 
(33, PUNCT, "*")
(33, CONST, 2) 
(33, PUNCT, ";")
(34, ID, 12) 
(34, PUNCT, "[")
(34, CONST, 2) 
(34, PUNCT, "]")
(34, PUNCT, "=")
(34, ID, 1) 
(34, PUNCT, "(")
(34, ID, 10) 
(34, PUNCT, ",")
(34, ID, 12) 
(34, PUNCT, "[")
(34, CONST, 3) 
(34, PUNCT, "]")
(34, PUNCT, ")")
(34, PUNCT, ";")
(36, ID, 11) 
(36, PUNCT, "+=")
(36, CONST, 0.2) 
(36, PUNCT, ";")
(37, ID, 13) 
(37, PUNCT, "[")
(37, CONST, 1) 
(37, PUNCT, "]")
(37, PUNCT, "=")
(37, ID, 11) 
(37, PUNCT, "/")
(37, CONST, 4) 
(37, PUNCT, ";")
(38, ID, 13) 
(38, PUNCT, "[")
(38, CONST, 2) 
(38, PUNCT, "]")
(38, PUNCT, "=")
(38, ID, 4) 
(38, PUNCT, "(")
(38, ID, 13) 
(38, PUNCT, "[")
(38, CONST, 3) 
(38, PUNCT, "]")
(38, PUNCT, ",")
(38, ID, 10) 
(38, PUNCT, "*")
(38, CONST, 0.5) 
(38, PUNCT, ")")
(38, PUNCT, ";")
(41, ID, 8) 
(41, PUNCT, "(")
(41, STR, "inteiro = %d\n")
(41, PUNCT, ",")
(41, ID, 10) 
(41, PUNCT, ")")
(41, PUNCT, ";")
(42, ID, 8) 
(42, PUNCT, "(")
(42, STR, "vetorInteiros[1] = %d\n")
(42, PUNCT, ",")
(42, ID, 12) 
(42, PUNCT, "[")
(42, CONST, 1) 
(42, PUNCT, "]")
(42, PUNCT, ")")
(42, PUNCT, ";")
(43, ID, 8) 
(43, PUNCT, "(")
(43, STR, "vetorInteiros[2] = %d\n")
(43, PUNCT, ",")
(43, ID, 12) 
(43, PUNCT, "[")
(43, CONST, 2) 
(43, PUNCT, "]")
(43, PUNCT, ")")
(43, PUNCT, ";")
(45, ID, 8) 
(45, PUNCT, "(")
(45, STR, "\n")
(45, PUNCT, ")")
(45, PUNCT, ";")
(47, ID, 8) 
(47, PUNCT, "(")
(47, STR, "flutuante = %.2f\n")
(47, PUNCT, ",")
(47, ID, 11) 
(47, PUNCT, ")")
(47, PUNCT, ";")
(48, ID, 8) 
(48, PUNCT, "(")
(48, STR, "vetorFlutuantes[1] = %.2f\n")
(48, PUNCT, ",")
(48, ID, 13) 
(48, PUNCT, "[")
(48, CONST, 1) 
(48, PUNCT, "]")
(48, PUNCT, ")")
(48, PUNCT, ";")
(49, ID, 8) 
(49, PUNCT, "(")
(49, STR, "vetorFlutuantes[2] = %.2f\n")
(49, PUNCT, ",")
(49, ID, 13) 
(49, PUNCT, "[")
(49, CONST, 2) 
(49, PUNCT, "]")
(49, PUNCT, ")")
(49, PUNCT, ";")
(51, ID, 8) 
(51, PUNCT, "(")
(51, STR, "\n")
(51, PUNCT, ")")
(51, PUNCT, ";")
(54, KEY, if) 
(54, PUNCT, "(")
(54, ID, 11) 
(54, PUNCT, ">")
(54, CONST, 15.0) 
(54, PUNCT, "&&")
(54, ID, 11) 
(54, PUNCT, "<")
(54, CONST, 30.0) 
(54, PUNCT, ")")
(54, PUNCT, "{")
(55, ID, 8) 
(55, PUNCT, "(")
(55, STR, "O valor de 'flutuante' está entre 15.0 e 30.0.\n")
(55, PUNCT, ")")
(55, PUNCT, ";")
(56, PUNCT, "}")
(59, KEY, if) 
(59, PUNCT, "(")
(59, ID, 10) 
(59, PUNCT, ">")
(59, CONST, 10) 
(59, PUNCT, ")")
(59, PUNCT, "{")
(60, ID, 8) 
(60, PUNCT, "(")
(60, STR, "O valor de 'inteiro' é maior que 10.\n")
(60, PUNCT, ")")
(60, PUNCT, ";")
(61, PUNCT, "}")
(61, KEY, else) 
(61, KEY, if) 
(61, PUNCT, "(")
(61, ID, 10) 
(61, PUNCT, "<")
(61, CONST, 10) 
(61, PUNCT, ")")
(61, PUNCT, "{")
(62, ID, 8) 
(62, PUNCT, "(")
(62, STR, "O valor de 'inteiro' é menor que 10.\n")
(62, PUNCT, ")")
(62, PUNCT, ";")
(63, PUNCT, "}")
(63, KEY, else) 
(63, PUNCT, "{")
(64, ID, 8) 
(64, PUNCT, "(")
(64, STR, "O valor de 'inteiro' é igual a 10.\n")
(64, PUNCT, ")")
(64, PUNCT, ";")
(65, PUNCT, "}")
(67, ID, 8) 
(67, PUNCT, "(")
(67, STR, "\n")
(67, PUNCT, ")")
(67, PUNCT, ";")
(70, ID, 8) 
(70, PUNCT, "(")
(70, STR, "Repetição usando FOR:\n")
(70, PUNCT, ")")
(70, PUNCT, ";")
(71, KEY, for) 
(71, PUNCT, "(")
(71, KEY, int) 
(71, ID, 14) 
(71, PUNCT, "=")
(71, CONST, 0) 
(71, PUNCT, ";")
(71, ID, 14) 
(71, PUNCT, "<")
(71, CONST, 5) 
(71, PUNCT, ";")
(71, ID, 14) 
(71, PUNCT, "++")
(71, PUNCT, ")")
(71, PUNCT, "{")
(72, ID, 8) 
(72, PUNCT, "(")
(72, STR, "vetorInteiros[%d] = %d\n")
(72, PUNCT, ",")
(72, ID, 14) 
(72, PUNCT, ",")
(72, ID, 12) 
(72, PUNCT, "[")
(72, ID, 14) 
(72, PUNCT, "]")
(72, PUNCT, ")")
(72, PUNCT, ";")
(73, PUNCT, "}")
(75, ID, 8) 
(75, PUNCT, "(")
(75, STR, "\nRepetição usando WHILE:\n")
(75, PUNCT, ")")
(75, PUNCT, ";")
(76, KEY, int) 
(76, ID, 15) 
(76, PUNCT, "=")
(76, CONST, 0) 
(76, PUNCT, ";")
(77, KEY, while) 
(77, PUNCT, "(")
(77, ID, 15) 
(77, PUNCT, "<")
(77, CONST, 5) 
(77, PUNCT, ")")
(77, PUNCT, "{")
(78, ID, 8) 
(78, PUNCT, "(")
(78, STR, "vetorInteiros[%d] = %d\n")
(78, PUNCT, ",")
(78, ID, 15) 
(78, PUNCT, ",")
(78, ID, 12) 
(78, PUNCT, "[")
(78, ID, 15) 
(78, PUNCT, "]")
(78, PUNCT, ")")
(78, PUNCT, ";")
(79, ID, 15) 
(79, PUNCT, "++")
(79, PUNCT, ";")
(80, PUNCT, "}")
(82, ID, 8) 
(82, PUNCT, "(")
(82, STR, "\nRepetição usando DO WHILE:\n")
(82, PUNCT, ")")
(82, PUNCT, ";")
(83, KEY, int) 
(83, ID, 16) 
(83, PUNCT, "=")
(83, CONST, 0) 
(83, PUNCT, ";")
(84, KEY, do) 
(84, PUNCT, "{")
(85, ID, 8) 
(85, PUNCT, "(")
(85, STR, "vetorInteiros[%d] = %d\n")
(85, PUNCT, ",")
(85, ID, 16) 
(85, PUNCT, ",")
(85, ID, 12) 
(85, PUNCT, "[")
(85, ID, 16) 
(85, PUNCT, "]")
(85, PUNCT, ")")
(85, PUNCT, ";")
(86, ID, 16) 
(86, PUNCT, "++")
(86, PUNCT, ";")
(87, PUNCT, "}")
(87, KEY, while) 
(87, PUNCT, "(")
(87, ID, 16) 
(87, PUNCT, "<")
(87, CONST, 5) 
(87, PUNCT, ")")
(87, PUNCT, ";")
(89, ID, 8) 
(89, PUNCT, "(")
(89, STR, "\n")
(89, PUNCT, ")")
(89, PUNCT, ";")
(92, ID, 7) 
(92, PUNCT, "(")
(92, PUNCT, ")")
(92, PUNCT, ";")
(94, KEY, int) 
(94, ID, 17) 
(94, PUNCT, "=")
(94, ID, 1) 
(94, PUNCT, "(")
(94, CONST, 10) 
(94, PUNCT, ",")
(94, CONST, 20) 
(94, PUNCT, ")")
(94, PUNCT, ";")
(95, ID, 8) 
(95, PUNCT, "(")
(95, STR, "Resultado após executar a função soma: %d.\n")
(95, PUNCT, ",")
(95, ID, 17) 
(95, PUNCT, ")")
(95, PUNCT, ";")
(97, KEY, float) 
(97, ID, 18) 
(97, PUNCT, "=")
(97, ID, 4) 
(97, PUNCT, "(")
(97, CONST, 10.5) 
(97, PUNCT, ",")
(97, CONST, 20.5) 
(97, PUNCT, ")")
(97, PUNCT, ";")
(98, ID, 8) 
(98, PUNCT, "(")
(98, STR, "Resultado após executar a função media: %.2f.\n")
(98, PUNCT, ",")
(98, ID, 18) 
(98, PUNCT, ")")
(98, PUNCT, ";")
(100, KEY, return) 
(100, CONST, 0) 
(100, PUNCT, ";")
(101, PUNCT, "}")

Tabela de Símbolos: 
1  soma
2  a
3  b
4  media
5  x
6  y
7  imprimirMensagem
8  printf
9  main
10  inteiro
11  flutuante
12  vetorInteiros
13  vetorFlutuantes
14  i
15  j
16  k
17  resultadoSoma
18  resultadoMedia
